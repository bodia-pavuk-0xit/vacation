diff --git a/tests/src/Functional/OverrideTest.php b/tests/src/Functional/OverrideTest.php
index 55739f4..f71b62c 100644
--- a/tests/src/Functional/OverrideTest.php
+++ b/tests/src/Functional/OverrideTest.php
@@ -2,6 +2,9 @@
 
 namespace Drupal\Tests\symfony_mailer\Functional;
 
+use Drupal\Component\Utility\Html;
+use Drupal\Tests\Traits\Core\CronRunTrait;
+
 /**
  * Test Mailer overrides.
  *
@@ -9,6 +12,8 @@ namespace Drupal\Tests\symfony_mailer\Functional;
  */
 class OverrideTest extends SymfonyMailerTestBase {
 
+  use CronRunTrait;
+
   /**
    * URL for override info page.
    */
@@ -25,16 +30,10 @@ class OverrideTest extends SymfonyMailerTestBase {
   const IMPORT_USER = '/admin/config/system/mailer/override/user/import';
 
   /**
-   * Modules to enable.
-   *
-   * @var array
+   * Test mailer override form.
    */
-  protected static $modules = ['contact', 'user'];
-
-  /**
-   * Test sending a test email.
-   */
-  public function testOverride() {
+  public function testForm() {
+    \Drupal::service('module_installer')->install(['contact', 'user']);
     $session = $this->assertSession();
     $this->drupalLogin($this->adminUser);
 
@@ -87,6 +86,51 @@ class OverrideTest extends SymfonyMailerTestBase {
     $this->checkOverrideInfo($expected);
   }
 
+  /**
+   * Test override of update module.
+   */
+  public function testUpdate() {
+    $this->container->get('module_installer')->install(['update', 'update_test']);
+    $this->resetAll();
+
+    // Enable and import, then clear the module setting to ensure we don't rely
+    // on it.
+    $this->drupalLogin($this->adminUser);
+    $this->config('update.settings')->set('notification.emails', [$this->siteEmail])->save();
+    $this->drupalGet('/admin/config/system/mailer/override/update/import');
+    $this->submitForm([], 'Enable & import');
+    $this->config('update.settings')->set('notification.emails', [])->save();
+
+    // Configure update test with an available update.
+    $system_info = [
+      '#all' => [
+        'version' => '8.0.0',
+      ],
+      'symfony_mailer' => [
+        'project' => 'symfony_mailer',
+        'version' => '8.x-1.0',
+        'hidden' => FALSE,
+      ],
+    ];
+    $xml_map = [
+      'drupal' => '0.0',
+      'symfony_mailer' => '1_0',
+    ];
+
+    $this->config('update_test.settings')
+      ->set('system_info', $system_info)
+      ->set('xml_map', $xml_map)
+      ->save();
+
+    // Trigger the email and check.
+    $this->cronRun();
+    $this->readMail();
+    $this->assertTo($this->siteEmail, $this->siteName);
+    $this->assertSubject("New release(s) available for $this->siteName");
+    $escaped_site_name = Html::escape($this->siteName);
+    $this->assertBodyContains("You need to take action to secure your server $escaped_site_name");
+  }
+
   /**
    * Checks the override info page.
    *
diff --git a/tests/src/Functional/SymfonyMailerTestBase.php b/tests/src/Functional/SymfonyMailerTestBase.php
index 883b678..81e04f8 100644
--- a/tests/src/Functional/SymfonyMailerTestBase.php
+++ b/tests/src/Functional/SymfonyMailerTestBase.php
@@ -43,12 +43,22 @@ abstract class SymfonyMailerTestBase extends BrowserTestBase {
    */
   protected $siteName = 'Tom & Jerry';
 
+  /**
+   * The site email.
+   *
+   * @var string
+   */
+  protected $siteEmail = 'site@example.org';
+
   /**
    * {@inheritdoc}
    */
   protected function setUp(): void {
     parent::setUp();
-    $this->config('system.site')->set('name', $this->siteName)->save();
+    $this->config('system.site')
+      ->set('name', $this->siteName)
+      ->set('mail', $this->siteEmail)
+      ->save();
     $this->adminUser = $this->drupalCreateUser(['administer mailer']);
   }
 
